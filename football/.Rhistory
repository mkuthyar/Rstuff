select (-week,-index,-tar,-td,-rush_td,-rec,-rec_yards,-rush_yards,-yac,-air_yards,-tm_att,-team_air,-aypt,-racr,-ms_air_yards,-target_share,-wopr) %>%
distinct()
chart2  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgracr, y = avgwopr)) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "RACR",
y = "WOPR",
caption = "Data from airyards",
title = "RACR and WOPR",
subtitle = "2019") +
theme_bw()
chart2
chart2  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgadot, y = avgwopr)) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "ADOT",
y = "WOPR",
caption = "Data from airyards",
title = "ADOT and WOPR",
subtitle = "2019") +
theme_bw()
chart2
chart2  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgwopr, y = avgadot )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "WOPR",
y = "ADOT",
caption = "Data from airyards",
title = "ADOT and WOPR",
subtitle = "2019") +
theme_bw()
chart2
chart2  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgracr, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "RACR",
y = "WOPR",
caption = "Data from airyards",
title = "RACR and WOPR",
subtitle = "2019") +
theme_bw()
chart2
RACRvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgracr, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "RACR",
y = "WOPR",
caption = "Data from airyards",
title = "RACR and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "gray", linetype = "dashed")
RACRvWOPR
RACRvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgracr, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "RACR",
y = "WOPR",
caption = "Data from airyards",
title = "RACR and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "gray", linetype = "dashed", color = "green")
RACRvWOPR
RACRvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = avgracr, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "RACR",
y = "WOPR",
caption = "Data from airyards",
title = "RACR and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed")
RACRvWOPR
receiving_yardsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = receiving_yards, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "receiving_yards",
y = "WOPR",
caption = "Data from airyards",
title = "receiving_yards and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed")
receiving_yardsvWOPR
View(df_air)
View(df_air_pergame)
View(df_air_withsnaps)
df_fantasy <- read.csv("WRfantasy")
df_fantasy <- read.csv("WRfantasy.csv")
View(df_fantasy)
df_air_totals <- merge(df_fantasy,df_air_totals, all=TRUE)
View(df_air_totals)
df_air_totals_filtered <- df_air_totals %>%
filter(position == "WR", totalsnaps > 30, targets >15) %>%
select (-week,-index,-tar,-td,-rush_td,-rec,-rec_yards,-rush_yards,-yac,-air_yards,-tm_att,-team_air,-aypt,-racr,-ms_air_yards,-target_share,-wopr) %>%
distinct()
View(df_air_withsnaps)
View(df_air_totals_filtered)
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_hvine(yintercept = 10, color = "blue", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_hvine(xintercept = 10, color = "blue", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_line()
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
geom_line() +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_line(aes(color = "black"))
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(aes(color = "black"))
fantasypointsvWOPR
## Compare fantasy PPG to WOPR ##
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(aes(model = lm))
## Compare fantasy PPG to WOPR ##
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(aes(model = lm))
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(model = lm)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
abline(fit, col="red")
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_abline(slope=1, intercept=0, alpha=.2)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_abline(slope=1, intercept=1, alpha=.2)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_abline(slope=1.5, intercept=5, alpha=.2)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method='lm')
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method='lm', se = FALSE)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method = "lm", se = FALSE)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(df_air_totals_filtered,aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method = "lm", se = FALSE)
fantasypointsvWOPR
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(df_air_totals_filtered,aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method = "lm", se = FALSE)
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method = "lm", se = FALSE)
df_air_totals_filtered <- df_air_totals %>%
filter(position == "WR", totalsnaps > 30, targets >15) %>%
select (-week,-index,-tar,-td,-rush_td,-rec,-rec_yards,-rush_yards,-yac,-air_yards,-tm_att,-team_air,-aypt,-racr,-ms_air_yards,-target_share,-wopr) %>%
distinct()
library(jsonlite)
library(tidyverse)
library(dplyr)
library(ggimage)
library(ggplot2)
library(ggrepel)
df_air <- fromJSON('http://airyards.com/2019/weeks')
df_snapcounts <- read.csv("WRSnapCounts.csv")
df_fantasy <- read.csv("WRfantasy.csv")
df_air <- fromJSON('http://airyards.com/2019/weeks')
df_snapcounts <- read.csv("WRSnapCounts.csv")
df_fantasy <- read.csv("WRfantasy.csv")
setwd("~/eeps_automation/Rstuff/football")
df_snapcounts <- read.csv("WRSnapCounts.csv")
df_fantasy <- read.csv("WRfantasy.csv")
df_air_totals <- df_air %>%
group_by(player_id) %>%
mutate(games_played = n(),
targets = sum(tar),
receptions = sum(rec),
receiving_yards = sum(rec_yards),
totalyac = sum(yac),
totalairyards = sum(air_yards),
team_attempts = sum(tm_att),
team_airyards = sum(team_air),
receivingtds = sum((td - rush_td )),
tds = sum(td),
rushing_tds = sum(rush_td),
rushing_yards = sum(rush_yards),
avgadot = (totalairyards/targets),
avgracr = (receiving_yards/totalairyards),
potay = (totalairyards/team_airyards), #percentage of team air yards
target_percentage = (targets/team_attempts),
avgwopr = ((1.5 * target_percentage) + (.7 * potay))
)
df_air_totals <- merge(df_snapcounts,df_air_totals, all=TRUE)
## Merge in fantasy data ##
df_air_totals <- merge(df_fantasy,df_air_totals, all=TRUE)
df_air_totals_filtered <- df_air_totals %>%
filter(position == "WR", totalsnaps > 30, targets >15) %>%
select (-week,-index,-tar,-td,-rush_td,-rec,-rec_yards,-rush_yards,-yac,-air_yards,-tm_att,-team_air,-aypt,-racr,-ms_air_yards,-target_share,-wopr) %>%
distinct()
fantasypointsvWOPR  <- df_air_totals_filtered%>%
filter(receiving_yards >300)%>%
ggplot(aes(x = fantasypoints_pg, y = avgwopr )) +
geom_point() +
geom_text(aes(label=full_name),check_overlap = TRUE, size=3, hjust=.5, vjust=-.75) +
labs(x = "fantasypoints",
y = "WOPR",
caption = "Data from airyards",
title = "fantasypoints and WOPR",
subtitle = "2019") +
theme_bw() +
geom_hline(yintercept = 0.5, color = "green", linetype = "dashed") +
geom_vline(xintercept = 10, color = "blue", linetype = "dashed") +
geom_smooth(method = "lm", se = FALSE)
fantasypointsvWOPR
